#"BE CONSERVATIVE" --> Dont make run too fast. Make sure enough parameters for several cases

#---------------------PLAY WITH THIS ONE---------------------------

P4: 
  Q: [800, 800, 800, 1000, 1000, 1000, 300, 300, 300, 10, 10, 10]
  R: [5, 5, 5, 100, 100, 100]
  P_mult: 100  # P = P_mult * Q #(100)

P5: 
  Q: [560, 560, 560, 700, 700, 700, 210, 210, 210, 7, 7, 7]
  R: [5, 5, 5, 100, 100, 100]
  P_mult: 100  # P = P_mult * Q #(100)

#---------------------------ORIGINAL-------------------------------------s
P1: 
  Q: [300, 300, 300, 10, 10, 10, 100, 100, 100, 10, 10, 10]
  R: [5, 5, 5, 50, 50, 50]
  P_mult: 100  # P = P_mult * Qs

P2: 
  Q: [10, 10, 10, 100, 100, 100, 10, 10, 10, 100, 100, 100]
  R: [5, 5, 5, 20, 20, 20]
  P_mult: 100  # P = P_mult * Q

P3: 
  Q: [100, 100, 100, 10, 10, 10, 100, 100, 100, 10, 10, 10]
  R: [5, 5, 5, 50, 50, 50]
  P_mult: 100  # P = P_mult * Q #(100)

  # (original seems to run best for Q2-4)

#--------------------------RANDOM NOTES---------------------------

#P3: 
#  Q: [0.00592, 0.00592, 0.00592,4, 4, 4, 1, 1, 1, 100, 100, 100]
#  R: [1.38, 5.95, 5.95, 1.38, 5.95, 5.95]
#  P_mult: 100  # P = P_mult * Q

#P3:
 # Q: [2500, 833.3, 416.6, 12666.7, 3333.3, 3333.3, 180, 180, 180, 3, 3, 3 ]
  #R: [3460, 207.6, 110.72, 625, 625, 625]
  #P_mult: 100

#P3:
 # Q: [833.3, 833.3, 833.3, 3333.1, 3333.3, 3333.3, 30000, 30000, 30000, 3, 3, 3 ]
  #R: [1.384, 0.738, 1.384, 208, 208, 208]
  #P_mult: 100

#P3: #(BRYSON'S RULE - PLAIN)
#  Q: [277.778, 277.778, 277.778, 1111.11, 1111.11, 1111.11, 100000000000000, 100000000000000, 100000000000000, 1, 1, 1 ]
#  R: [1.38408, 1.38408, 1.38408, 625, 625, 625]
#  P_mult: 100 # P = P_mult * Q
